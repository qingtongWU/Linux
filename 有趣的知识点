1. 桌面和xshell直接进行文件传输(小文件)，大文件用winscp or git
  $ sudo apt install lrzsz;
  $ sz test.c  //发送到桌面
  $ rz         //从桌面拉过来
  
2. 编译命令
   a. gcc test.c -o test  //生成test可执行文件
   b. gcc test.c -std=c99 //生成a.out可执行文件
   c. 使用makefile

3. 在.o文件中以16进制显示
    打开.o文件，命令行输入   :%!xxd
    回去二进制： :%!xxd -r
    
4.遍历字符串的时候string 下标访问可以用 s.at(i).

5. 逗号(,)表达式，求解顺序，从左往右，整个表达式的值是最后一个表达式的值；
    
6.标准错误输出流 cerr,clog
    它们俩都是标准错误流，区别在于cerr不经过缓冲区，直接向终端输出信息，
	而clog中的信息是存放在缓冲区的，缓冲区满后或遇到endl向终端输出.
    
7.刷新输出缓冲区
    1.刷新：输出缓冲区的内容写入到真实的输出设备或者文件。
	ubuntu 18.04 的缓冲区大小为1024个字节
	2.输出缓冲区刷新的情况：
   		1.程序正常结束
    	2.缓冲区满
    	3.使用操作符显示地输出缓冲区
    		1. flush -- 能刷新，不能换行
    		2. endl -- 能刷新，能换行
    		3. ends -- 能输出，不能刷新


